<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:ico="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cnvrtr="clr-namespace:APPCommon.Class"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <!--Window-->
    
    <Style x:Key="windowButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.15" ScaleY="1.15" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7" />
            </Trigger>
        </Style.Triggers>
    </Style>
  
    <Style x:Key="windowTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground"  Value="White" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
        <Setter Property="VerticalAlignment"  Value="Center" />
    </Style>

    <!--Login-->
    <Style x:Key="loginButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.15" ScaleY="1.15" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="loginTitle"  TargetType="TextBlock">
        <Setter Property="Foreground"  Value="White" />
        <Setter Property="VerticalAlignment"  Value="Center" />
        <Setter Property="FontFamily"  Value="{DynamicResource SegoeUI}" />
    </Style>
    <Style x:Key="loginMenuButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Opacity="1" Color="Black" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Opacity="1" Color="#80dcdcdc" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="0"
                         Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Direction="320" ShadowDepth="2" BlurRadius="5" Opacity="0.5" />
                    </Setter.Value>
                </Setter>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="WhiteSmoke"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="loginMenuListView"  TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style x:Key="loginMenuGridViewColumnHeader"  TargetType="GridViewColumnHeader">
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height"  Value="26" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <TextBlock Text="{TemplateBinding Content}"
                                       TextAlignment="Left"
                                       FontSize="15"
                                       FontWeight="DemiBold"
                                       Foreground="White" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="loginMenuListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height"  Value="26" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="Demibold" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                <Setter Property="Background"  Value="{DynamicResource colorHighlight}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Menu-->
    <Style x:Key="menuButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="140" />
        <Setter Property="Height" Value="65" />
        <Setter Property="Foreground" Value="{DynamicResource colorMenuText}" />
        <Setter Property="Background" Value="{DynamicResource colorHighlight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         CornerRadius="5"
                         BorderBrush="{TemplateBinding Background}"
                         Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter
                                    Margin="2"
                                    RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Button.Foreground" Value="{DynamicResource colorHighlightText}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Button.Foreground" Value="{DynamicResource colorHighlight}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5" />
                    </Setter.Value>
                </Setter>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                        To="#293A80"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        FillBehavior="HoldEnd" Duration="0:0:0.20" AutoReverse="False" RepeatBehavior="1x" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                         Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                         FillBehavior="HoldEnd" Duration="0:0:0.15" AutoReverse="False" RepeatBehavior="1x" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="menuTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="5" />
    </Style>
    <Style x:Key="menuListBox"  TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="Padding"  Value="3" />
    </Style>
    <Style x:Key="menuListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height" Value="27" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="_Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource colorHighlight}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.250" To="10,2,2,2"
                                                            Storyboard.TargetName="_Border"
                                                            Storyboard.TargetProperty="Padding" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.250" To="2"
                                                             Storyboard.TargetName="_Border"
                                                            Storyboard.TargetProperty="Padding" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SubMenu-->
    <Style x:Key="subMenuButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="140" />
        <Setter Property="Height" Value="65" />
        <Setter Property="Foreground" Value="{DynamicResource colorMenuText}" />
        <Setter Property="Background" Value="{DynamicResource colorMenuButton}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         BorderBrush="{TemplateBinding Background}"
                         Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter
                                    Margin="2"
                                    RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Button.Foreground" Value="{DynamicResource colorHighlightText}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Button.Foreground" Value="{DynamicResource colorHighlight}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5" />
                    </Setter.Value>
                </Setter>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                        To="#293A80"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        FillBehavior="HoldEnd" Duration="0:0:0.20" AutoReverse="False" RepeatBehavior="1x" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                         Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                         FillBehavior="HoldEnd" Duration="0:0:0.15" AutoReverse="False" RepeatBehavior="1x" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>   
    <Style x:Key="subMenuTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <!--AppMenu-->
    <Style x:Key="appMenuTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground"  Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="VerticalAlignment"  Value="Center" />
    </Style>
    <Style x:Key="appMenuListBox"  TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="#BFFFFFFF" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="Padding"  Value="1" />
    </Style>
    <Style x:Key="appMenuListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="_Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource colorSemiHighlight}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.250" To="10,2,2,2"
                                                            Storyboard.TargetName="_Border"
                                                            Storyboard.TargetProperty="Padding" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.250" To="2"
                                                             Storyboard.TargetName="_Border"
                                                            Storyboard.TargetProperty="Padding" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource colorHighlight}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Context.MenuItem-->
    <Style x:Key="contextMenu2" TargetType="{x:Type ContextMenu}">
        <Setter Property="Margin" Value="-35,0,-15,-5" />
        <Setter Property="Width" Value="200" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{DynamicResource colorMain2}" />
    </Style>
    <Style x:Key="menuItem2" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{DynamicResource colorMain2}" />
        <Setter Property="Foreground" Value="{DynamicResource colorMenuText}" />
        <Setter Property="Padding" Value="45,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="MenuItemBorder" Width="200" Height="28" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid Margin="0" VerticalAlignment="Center">
                            <ContentPresenter Content="{TemplateBinding Header}"
                                                      ContentSource="Header"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Padding" Value="55,0,0,0" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Background" Value="{DynamicResource colorHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="contextMenu3" TargetType="{x:Type ContextMenu}">
        <Setter Property="Margin" Value="-35,0,-15,-5" />
        <Setter Property="Width" Value="200" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{DynamicResource colorMain3}" />
    </Style>
    <Style x:Key="menuItem3" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{DynamicResource colorMain3}" />
        <Setter Property="Foreground" Value="{DynamicResource colorMenuText}" />
        <Setter Property="Padding" Value="45,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="MenuItemBorder" Width="200" Height="28" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid Margin="0" VerticalAlignment="Center">
                            <ContentPresenter Content="{TemplateBinding Header}"
                                                      ContentSource="Header"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Padding" Value="55,0,0,0" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Background" Value="{DynamicResource colorHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="contextMenu4" TargetType="{x:Type ContextMenu}">
        <Setter Property="Margin" Value="-35,0,-15,-5" />
        <Setter Property="Width" Value="200" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{DynamicResource colorMain4}" />
    </Style>
    <Style x:Key="menuItem4" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{DynamicResource colorMain4}" />
        <Setter Property="Foreground" Value="{DynamicResource colorMenuText}" />
        <Setter Property="Padding" Value="45,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="MenuItemBorder" Width="200" Height="28" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid Margin="0" VerticalAlignment="Center">
                            <ContentPresenter Content="{TemplateBinding Header}"
                                                      ContentSource="Header"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Padding" Value="55,0,0,0" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Background" Value="{DynamicResource colorHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Dialog-->
    <Style x:Key="dialogTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground"  Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="VerticalAlignment"  Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Foreground.Color" To="#F39422" />
                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="FontSize" To="16" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Foreground.Color" To="White" />
                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="FontSize" To="14" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="dialogButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.10" ScaleY="1.10" CenterX="20" CenterY="20" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.7" />
                    </Trigger>
                </Style.Triggers>-->
    </Style>
    <Style x:Key="dialogBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0.25" />
        <Setter Property="BorderBrush" Value="Black" />
    </Style>
    <Style x:Key="dialogBorderLoader" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Background" Value="DarkBlue" />
    </Style>

    <!--Toolbar-->
    <Style x:Key="toolbarGridA" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource colorMainA}" />
    </Style>
    <Style x:Key="toolbarGrid1" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource colorMain1}" />
    </Style>
    <Style x:Key="toolbarGrid2" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource colorMain2}" />
    </Style>
    <Style x:Key="toolbarGrid3" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource colorMain3}" />
    </Style>
    <Style x:Key="toolbarGrid4" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource colorMain4}" />
    </Style>
    <Style x:Key="toolbarGrid5" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource colorMain5}" />
    </Style>
    <Style x:Key="toolbarTitle"  TargetType="TextBlock">
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground"  Value="White" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
        <Setter Property="VerticalAlignment"  Value="Center" />
    </Style>
    <Style x:Key="toolbarButton" TargetType="{x:Type Button}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="toolbarButtonText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>
    <Style x:Key="toolbarLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment"  Value="Center" />
    </Style>

    <Style x:Key="toolbarRoundButton" TargetType="{x:Type Button}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Background" Value="{DynamicResource colorMainA}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="10,10,0,0" />
                <Setter Property="BorderThickness" Value="0.5" />
                <Setter Property="BorderBrush" Value="GhostWhite" />
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorSemiHighlight}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorHighlight}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="toolbarRoundButtonText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="toolbarTextBox"  TargetType="{x:Type TextBox}">
        <Setter Property="Height"  Value="20" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="Padding"  Value="3,0" />
        <Setter Property="Margin" Value="0,5" />
    </Style>
    <Style x:Key="toolbarWatermark"  TargetType="{x:Type TextBlock}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground"  Value="DarkGray" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalAlignment"  Value="Center" />
        <Setter Property="Visibility"  Value="Collapsed" />
    </Style>

    <!--Report-->
    <Style x:Key="reportHolder" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="20" />
    </Style>

    <Style x:Key="reportBG" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="DarkGray" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="reportGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource colorReport}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="20" />
    </Style>
    <Style x:Key="reportMain" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource patternBrilliant}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="reportUserControl" TargetType="{x:Type UserControl}">
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style x:Key="reportTitle"  TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="VerticalAlignment"  Value="Bottom" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
    </Style>

    <Style x:Key="reportTitleControl"  TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="0,0,5,0" />
        <Setter Property="VerticalAlignment"  Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
    </Style>
    <Style x:Key="reportLabel" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment"  Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
    </Style>
    <Style x:Key="reportValue" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment"  Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
    </Style>
    <Style x:Key="reportValue2" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalAlignment"  Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
    </Style>
    <Style x:Key="reportBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Black" />
    </Style>
    <Style x:Key="reportScrollViewer"  TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>
    <Style x:Key="reportValueMultiline"  TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment"  Value="Top" />
        <Setter Property="Padding"  Value="3,5" />
        <Setter Property="Margin"  Value="5,0" />
        <Setter Property="TextWrapping"  Value="Wrap" />
        <Setter Property="Foreground"  Value="Black" />
        <Setter Property="FontWeight"  Value="DemiBold" />
        <Setter Property="FontSize"  Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
    </Style>

    <Style x:Key="reportListView" TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style x:Key="reportListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontFamily" Value="{DynamicResource SegoeUI}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height"  Value="22" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Border" BorderBrush="Silver" BorderThickness="0,0,0,0.5">
                        <Grid Background="{TemplateBinding Background}">
                            <Border Name="Selection" Visibility="Collapsed" />
                            <!-- This is used when GridView is put inside the ListView -->
                            <GridViewRowPresenter Grid.RowSpan="2"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="reportGridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Height"  Value="22" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Name="Border" BorderBrush="Black" BorderThickness="0,0,0,0.5">
                        <TextBlock Text="{TemplateBinding Content}" Padding="5,1" Width="{TemplateBinding Width}" TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="reportListBox"  TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="Padding"  Value="3" />
    </Style>
    <Style x:Key="reportListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Height"  Value="23" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Border" BorderBrush="Silver" BorderThickness="0,0,0,0">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListView-->
    <Style x:Key="listviewItemReport" TargetType="{x:Type ListViewItem}">
        <!--<Setter Property="FontFamily" Value="{DynamicResource Roboto}" />-->
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height"  Value="22" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Border" BorderBrush="Silver" BorderThickness="0,0,0,0.5">
                        <Grid Background="{TemplateBinding Background}">
                            <Border Name="Selection" Visibility="Collapsed" />
                            <!-- This is used when GridView is put inside the ListView -->
                            <GridViewRowPresenter Grid.RowSpan="2"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                <Setter Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="listviewItemReportStyle1" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height"  Value="23" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Border" BorderBrush="Silver" BorderThickness="0,0,0,0.5">
                        <Grid Background="{TemplateBinding Background}">
                            <Border Name="Selection" Visibility="Collapsed" />
                            <!-- This is used when GridView is put inside the ListView -->
                            <GridViewRowPresenter Grid.RowSpan="2"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                <Setter Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                <Setter Property="Background" Value="AliceBlue" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="listviewItemReportStyle2" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height"  Value="23" />
        <Setter Property="Foreground" Value="Black" />
        <!--<Setter Property="Focusable" Value="false" />-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                <Setter Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                <Setter Property="Background" Value="AliceBlue" />
            </Trigger>
            <DataTrigger Binding="{Binding isadded}" Value="True">
                <Setter Property="Background" Value="LightPink" />
            </DataTrigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="Demibold" />
                <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                <Setter Property="BorderBrush" Value="{DynamicResource colorHighlight}" />
                <Setter Property="Background"  Value="{DynamicResource colorHighlight}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="listviewItemReportStyle3" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height"  Value="20" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="listviewItemReportStyle4" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height"  Value="23" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                <Setter Property="Background" Value="WhiteSmoke" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="Demibold" />
                <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                <Setter Property="BorderBrush" Value="{DynamicResource colorHighlight}" />
                <Setter Property="Background"  Value="{DynamicResource colorHighlight}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="listviewItemReportTransparent" TargetType="{x:Type ListViewItem}">
        <!--<Setter Property="FontFamily" Value="{DynamicResource Roboto}" />-->
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height"  Value="22" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Border" BorderBrush="Silver" BorderThickness="0,0,0,0.5">
                        <Grid Background="{TemplateBinding Background}">
                            <Border Name="Selection" Visibility="Collapsed" />
                            <!-- This is used when GridView is put inside the ListView -->
                            <GridViewRowPresenter Grid.RowSpan="2"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="listviewItemReportSignature" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Height"  Value="23" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="listviewItemReportSignatureColored" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Height"  Value="23" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding dateapproved}" Value="{x:Null}">
                <Setter Property="Background" Value="MistyRose" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border Name="Border" BorderBrush="Transparent" BorderThickness="0">
                                <Grid Background="{TemplateBinding Background}">
                                    <Border Name="Selection" Visibility="Collapsed" />
                                    <!-- This is used when GridView is put inside the ListView -->
                                    <GridViewRowPresenter Grid.RowSpan="2"
                                                          Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="listviewGridViewColumnHeaderReport" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Height"  Value="24" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Name="Border" BorderBrush="Black" BorderThickness="0,0,0,0.5">
                        <TextBlock Text="{TemplateBinding Content}" Padding="5,1" Width="{TemplateBinding Width}" TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="listviewGridViewColumnHeaderReportStyle1" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Height"  Value="24" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Name="Border" BorderBrush="Black" BorderThickness="0,0,0,0.5">
                        <TextBlock Text="{TemplateBinding Content}" Padding="5,1" Width="{TemplateBinding Width}" TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="listviewGridViewColumnHeaderReportStyleLeft" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Height"  Value="24" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Name="Border" BorderBrush="Black" BorderThickness="0,0,0,0.5">
                        <TextBlock Text="{TemplateBinding Content}" Padding="5,1" Width="{TemplateBinding Width}" TextAlignment="Left" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="listviewGridViewColumnHeaderReportLink" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Height"  Value="24" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Name="Border" BorderBrush="Black" BorderThickness="0,0,0,0.5">
                        <TextBlock Text="{TemplateBinding Content}" Padding="5,1" Width="{TemplateBinding Width}" TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Foreground.Color" To="Gold" />
                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="FontSize" To="14.5" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Foreground.Color" To="Black" />
                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="FontSize" To="14" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="listviewGridViewColumnHeaderReportHidden" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Hidden" />
    </Style>
    <Style x:Key="listviewGridViewColumnHeaderReportCollapsed" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <Style x:Key="listviewCellStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    <Style x:Key="listviewCellStyleRight" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Padding" Value="0,0,20,0" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <!--ListBox-->
    <Style x:Key="listBox"  TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="Padding"  Value="3" />
    </Style>
    <Style x:Key="listBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height" Value="27" />

        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Background.Color" To="#F39422" />
                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="FontSize" To="16" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Background.Color" To="Transparent" />
                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="FontSize" To="14" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="_Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource colorHighlight}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource colorSemiHighlight}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                            <Setter Property="Cursor" Value="Hand" />
                            <!--<Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="_Border"  Storyboard.TargetProperty="Background" To="Orange" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3"  Storyboard.TargetName="_Border"  Storyboard.TargetProperty="Background" To="Transparent" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>-->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.250" To="10,2,2,2"
                                                            Storyboard.TargetName="_Border"
                                                            Storyboard.TargetProperty="Padding" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.250" To="2"
                                                             Storyboard.TargetName="_Border"
                                                            Storyboard.TargetProperty="Padding" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGrid-->
    <Style x:Key="dataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="RowHeight" Value="25" />
        <Setter Property="BorderBrush" Value="Gainsboro" />
        <Setter Property="RowBackground" Value="{DynamicResource colorDatagrid1}" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource colorDatagrid2}" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="IsReadOnly" Value="true" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="HeadersVisibility" Value="All" />
        <Setter Property="RowHeaderWidth" Value="5" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Style.Resources>
            <Style TargetType="ScrollBar">
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="10" />
                        <Setter Property="MinWidth" Value="10" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Height" Value="10" />
                        <Setter Property="MinHeight" Value="10" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="dataGridScrollBar" TargetType="{x:Type ScrollBar}">
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="10" />
                <Setter Property="MinWidth" Value="10" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="dataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontFamily" Value="{DynamicResource SegoeUI}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Height"  Value="25" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid HorizontalAlignment="Stretch" Background="Gainsboro">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Label
                               Margin="3,-3"
                               Background="Gainsboro"
                               Content="{TemplateBinding Content}"
                               Grid.Column="0"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center" />
                        <Thumb HorizontalAlignment="Right"
                               Grid.Column="1"
                               Name="PART_HeaderGripper"
                               Margin="0,1"
                               Width="0.75" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="dataGridCheckbox" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="dataGridCheckboxDisabled" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>
    <Style x:Key="dataGridCell" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Margin" Value="10,0,5,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style x:Key="dataGridCellCenter" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    <Style x:Key="dataGridCellLeft" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    <Style x:Key="dataGridCellRight" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Padding" Value="0,0,20,0" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    <Style x:Key="dataGridCellCheckBoxCenter" TargetType="{x:Type CheckBox}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="dataGridCellHighlight" TargetType="{x:Type DataGridCell}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorHighlight}" />
                <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="Demibold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ScrollViewer-->
    <Style x:Key="scrollViewerMini" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                               Grid.Row="0"
                               Grid.Column="1"
                               Value="{TemplateBinding VerticalOffset}"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                               Orientation="Horizontal"
                               Grid.Row="1"
                               Grid.Column="0"
                               Value="{TemplateBinding HorizontalOffset}"
                               Maximum="{TemplateBinding ScrollableWidth}"
                               ViewportSize="{TemplateBinding ViewportWidth}"
                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="StandardBorderBrush"
                 Color="#888" />
    <SolidColorBrush x:Key="StandardBackgroundBrush"
                 Color="Black" />
    <SolidColorBrush x:Key="HoverBorderBrush"
                 Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush"
                 Color="Gray" />
    <SolidColorBrush x:Key="SelectedForegroundBrush"
                 Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush"
                 Color="#888" />
    <SolidColorBrush x:Key="GlyphBrush"
                 Color="#444" />
    <SolidColorBrush x:Key="NormalBrush"
                 Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush"
                 Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBrush"
                 Color="#C8C8C8" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush"
                 Color="#888" />
    <Style x:Key="ScrollBarLineButton"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility"
            Value="Hidden" />
        <Setter Property="SnapsToDevicePixels"
            Value="True" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="Focusable"
            Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                        Margin="1"
                        CornerRadius="2"
                        Background="{StaticResource NormalBrush}"
                        BorderBrush="{StaticResource NormalBorderBrush}"
                        BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Fill="{StaticResource GlyphBrush}"
                          Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                             Value="true">
                            <Setter TargetName="Border"
                                Property="Background"
                                Value="{StaticResource NormalBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                             Value="false">
                            <Setter Property="Foreground"
                                Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility"
            Value="Hidden" />
        <Setter Property="SnapsToDevicePixels"
            Value="True" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="IsTabStop"
            Value="false" />
        <Setter Property="Focusable"
            Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb"
       TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
            Value="True" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="IsTabStop"
            Value="false" />
        <Setter Property="Focusable"
            Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        Width="8"
                        Margin="8,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbHor"
       TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
            Value="True" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="IsTabStop"
            Value="false" />
        <Setter Property="Focusable"
            Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        Height="8"
                        Margin="0,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="0" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                CornerRadius="2"
                Background="Transparent" />
            <RepeatButton Grid.Row="0"
                      Style="{StaticResource ScrollBarLineButton}"
                      Height="18"
                      Command="ScrollBar.LineUpCommand"
                      Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track"
               Grid.Row="1"
               IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                              Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                       Margin="-8,1,1,1"
                       Background="{StaticResource HorizontalNormalBrush}"
                       BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                              Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                      Style="{StaticResource ScrollBarLineButton}"
                      Height="18"
                      Command="ScrollBar.LineDownCommand"
                      Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar"
                 TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition Width="0" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                CornerRadius="3"
                Background="Transparent" />
            <RepeatButton Grid.Column="0"
                      Style="{StaticResource ScrollBarLineButton}"
                      Width="18"
                      Command="ScrollBar.LineLeftCommand"
                      Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track"
               Grid.Column="1"
               IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                              Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbHor}"
                       Margin="1"
                       Background="{StaticResource HorizontalNormalBrush}"
                       BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                              Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
                      Style="{StaticResource ScrollBarLineButton}"
                      Width="18"
                      Command="ScrollBar.LineRightCommand"
                      Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
            Value="True" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                 Value="Horizontal">
                <Setter Property="Width"
                    Value="Auto" />
                <Setter Property="Height"
                    Value="12" />
                <Setter Property="Template"
                    Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
                 Value="Vertical">
                <Setter Property="Width"
                    Value="10" />
                <Setter Property="Height"
                    Value="Auto" />
                <Setter Property="Template"
                    Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DatePicker-->
    <Style x:Key="datePicker"  TargetType="{x:Type DatePicker}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment"  Value="Center" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="Width"  Value="120" />
        <Style.Resources>
            <Style TargetType="DatePickerTextBox">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="3,0" />
                <Setter Property="FontSize" Value="12.5" />
                <Setter Property="FontWeight" Value="DemiBold" />
            </Style>
        </Style.Resources>
    </Style>


    <!--TimePicker-->
    <Style x:Key="timePicker"  TargetType="{x:Type xctk:TimePicker}">
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="Padding"  Value="3,0" />
        <Setter Property="Margin"  Value="0,4" />
        <Setter Property="ShowButtonSpinner"  Value="False" />
        <Setter Property="Format"  Value="Custom" />
        <Setter Property="FormatString"  Value="HH:mm" />
        <Setter Property="TextAlignment"  Value="Center" />
        <Setter Property="FontWeight"  Value="DemiBold" />
    </Style>

    <!--AutoCompleteTextBox-->
    <Style x:Key="autoCompleteBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="_Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource colorHighlight1}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorHighlightText1}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource colorHighlight}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TabControl-->
    <Style x:Key="tabControl" TargetType="{x:Type TabControl}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TabStripPlacement" Value="Top" />
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style x:Key="tabItem" TargetType="{x:Type TabItem}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
        <Setter Property="BorderThickness" Value="0" />
        <!--<Setter Property="FontWeight" Value="Normal" />-->
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextWrapping="Wrap"
                               Text="{Binding}"
                               FontSize="16"
                               TextAlignment="Center"
                               VerticalAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border>
                        <Grid>
                            <Grid>
                                <Border x:Name="border"
                                          CornerRadius="13,13,0,0"
                                          Width="150"
                                          Height="30"
                                          Background="{DynamicResource colorMain2}" />
                            </Grid>
                            <ContentPresenter ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource colorSemiHighlight}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource colorHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="TabItem.IsSelected" Value="True">
                <Setter Property="FontWeight" Value="DemiBold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Common-->
    <Style x:Key="commonGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource patternEggShell}" />
    </Style>
    <Style x:Key="commonTitle"  TargetType="TextBlock">
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground"  Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment"  Value="Center" />
    </Style>
    <Storyboard x:Key="animateTextBlock" RepeatBehavior="Forever">
        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                     From="0"
                     To="1"
                     AutoReverse="True"
                     BeginTime="0:0:1"
                     Duration="0:0:0.08" />
        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                     From="1"
                     To="1"
                     AutoReverse="True"
                     Duration="0:0:0.4" />
        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                     From="1"
                     To="0"
                     AutoReverse="True"
                     Duration="0:0:0.08" />
    </Storyboard>
    <Style x:Key="blinkingTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground"  Value="Lime" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="VerticalAlignment"  Value="Center" />
    </Style>

    <!--Separator-->
    <Style x:Key="xSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="Gainsboro" />
        <Setter Property="BorderThickness" Value="0.25" />
        <!--<Setter Property="Height" Value="5" />-->
        <Setter Property="Margin" Value="10,5" />
    </Style>
    <Style x:Key="ySeparator" TargetType="Separator">
        <Setter Property="BorderThickness" Value="0.25" />
        <!--<Setter Property="Width" Value="0.75" />-->
        <Setter Property="Margin" Value="0,10" />
        <Setter Property="Background" Value="Gainsboro" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Background="{TemplateBinding Panel.Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Slider-->
    <Style x:Key="sliderDetails" TargetType="{x:Type Slider}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Value" Value="1" />
        <Setter Property="Maximum" Value="1" />
        <Setter Property="Minimum" Value="0.10" />
        <Setter Property="TickFrequency" Value="0.10" />
        <Setter Property="TickPlacement" Value="None" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="Background" Value="{DynamicResource colorHighlight}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="sliderGrid" TargetType="{x:Type Grid}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="{DynamicResource colorHighlight}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Details-->
    <Style x:Key="detailsButton" TargetType="{x:Type Button}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.15" ScaleY="1.15" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="detailsButtonText"  TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground"  Value="White" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="VerticalAlignment"  Value="Center" />
    </Style>
    <Style x:Key="detailsTextBlock"  TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground"  Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment"  Value="Center" />
    </Style>
    <Style x:Key="detailsWatermark"  TargetType="{x:Type TextBlock}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <Style x:Key="detailsTextBox"  TargetType="{x:Type TextBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="Padding"  Value="3,0" />
        <Setter Property="Margin" Value="0,5" />
    </Style>
    <Style x:Key="detailsTextBoxMultiline"  TargetType="{x:Type TextBox}">
        <Style.Resources>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource {x:Type ScrollBar}}">
                <Setter Property="Margin" Value="0,0,2,0" />
            </Style>
        </Style.Resources>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalAlignment"  Value="Left" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="Padding"  Value="3,0" />
        <Setter Property="Margin"  Value="0,5" />
        <Setter Property="AcceptsReturn"  Value="true" />
        <Setter Property="TextWrapping"  Value="Wrap" />
    </Style>
    <Style x:Key="detailsScrollViewer"  TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Margin" Value="0,5" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>
    <Style x:Key="detailsListBox"  TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="Padding"  Value="3" />
    </Style>
    <Style x:Key="detailsListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="_Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource colorHighlight}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="detailsListBox2"  TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="White" />
    </Style>
    <Style x:Key="detailsListBoxItem2" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height"  Value="23" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Padding="{TemplateBinding Padding}"
                     Background="{TemplateBinding Background}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     SnapsToDevicePixels="true">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                <Setter Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                <Setter Property="Background" Value="AliceBlue" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="Demibold" />
                <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                <Setter Property="BorderBrush" Value="{DynamicResource colorHighlight}" />
                <Setter Property="Background"  Value="{DynamicResource colorHighlight}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="detailsListView"  TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding"  Value="0,5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style x:Key="detailsGridViewColumnHeader"  TargetType="GridViewColumnHeader">
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height"  Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <TextBlock Text="{TemplateBinding Content}"
                                       TextAlignment="Left"
                                       FontSize="15"
                                       FontWeight="DemiBold"
                                       Foreground="White" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="detailsGridViewColumnHeaderCollapsed" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <Style x:Key="detailsListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Height"  Value="23" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="Demibold" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                <Setter Property="Background"  Value="{DynamicResource colorHighlight}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="detailsComboBox"  TargetType="{x:Type ComboBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment"  Value="Stretch" />
        <Setter Property="BorderThickness"  Value="0" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="Padding"  Value="5,0" />
        <Setter Property="Margin" Value="0,5" />
        <Style.Resources>
            <Style TargetType="ScrollBar">
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="10" />
                        <Setter Property="MinWidth" Value="10" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Height" Value="10" />
                        <Setter Property="MinHeight" Value="10" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="detailsComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="_Border"
                                Padding="3"
                                SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource colorHighlight1}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorHighlightText1}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{DynamicResource colorHighlight}" />
                            <Setter Property="Foreground" Value="{DynamicResource colorHighlightText}" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Reminder-->
    <Style x:Key="reminderGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="Silver" />
    </Style>
    <Style x:Key="reminderTextBlock"  TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Foreground"  Value="Black" />
        <Setter Property="FontFamily" Value="{DynamicResource Mulish}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="VerticalAlignment"  Value="Center" />
    </Style>

    <!--Grid Background-->
    <Style x:Key="bgClimpek" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource patternClimpek}" />
    </Style>
    <Style x:Key="bgCreamPixel" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource patternCreamPixel}" />
    </Style>
    <Style x:Key="bgBlackLozenge" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource patternBlackLozenge}" />
    </Style>

    <!--Converter-->

    <!--Pattern-->
    <ImageBrush x:Key="patternClimpek" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/climpek.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,44,44" />
    <ImageBrush x:Key="patternEggShell" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/egg-shell.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,256,256" />
    <ImageBrush x:Key="patternDarkStripes" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/dark-stripes.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,50,50" />
    <ImageBrush x:Key="patternCreamPixel" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/cream-pixels.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,160,160" />
    <ImageBrush x:Key="patternRebel" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/rebel.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,320,360" />
    <ImageBrush x:Key="patternBlackLinen" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/black-linen.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,482,490" />
    <ImageBrush x:Key="patternSimpleDashed" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/simple-dashed.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,14,14" />
    <ImageBrush x:Key="patternPadded" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/padded.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,60,60" />
    <ImageBrush x:Key="patternBlackLozenge" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/black-lozenge.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,38,38" />
    <ImageBrush x:Key="patternPaper" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/paper.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,500,593" />
    <ImageBrush x:Key="patternBrilliant" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/brilliant.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,3,3" />
    <ImageBrush x:Key="patternCreamDust" ImageSource="pack://application:,,,/APPCommon;component/Resources/Patterns/cream-dust.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,50,50" />

    <!--Color-->

    <SolidColorBrush x:Key="colorWindow" Color="DimGray" />
    <SolidColorBrush x:Key="colorDialog" Color="#515151" />
    <SolidColorBrush x:Key="colorReport" Color="AliceBlue" />
    <SolidColorBrush x:Key="colorMain1" Color="#010038" />
    <SolidColorBrush x:Key="colorMainA" Color="#0f1c57" />
    <SolidColorBrush x:Key="colorMain2" Color="#293A80" />
    <SolidColorBrush x:Key="colorMain3" Color="#3A5BA0" />
    <SolidColorBrush x:Key="colorMain4" Color="#537EC5" />
    <SolidColorBrush x:Key="colorMain5" Color="#658bcb" />
    <SolidColorBrush x:Key="colorHighlight" Color="#F39422" />
    <SolidColorBrush x:Key="colorSemiHighlight" Color="#99F39422" />
    <SolidColorBrush x:Key="colorHighlightText" Color="White" />
    <SolidColorBrush x:Key="colorHighlight1" Color="#4DF39422" />
    <SolidColorBrush x:Key="colorHighlightText1" Color="Black" />
    <SolidColorBrush x:Key="colorMenuText" Opacity="1" Color="White" />
    <SolidColorBrush x:Key="colorMenuButton" Opacity="1" Color="#80537EC5" />
    <SolidColorBrush x:Key="colorDatagrid1" Opacity="1" Color="White" />
    <SolidColorBrush x:Key="colorDatagrid2" Opacity="1" Color="AliceBlue" />
    <!--<SolidColorBrush x:Key="colorDatagrid1" Opacity="1" Color="AliceBlue" />
    <SolidColorBrush x:Key="colorDatagrid2" Opacity="1" Color="LightBlue" />-->

    <!--Font-->
    <FontFamily x:Key="SegoePR">pack://application:,,,/APPCommon;component/Resources/Fonts/#Segoe Print</FontFamily>
    <FontFamily x:Key="SegoeUI">pack://application:,,,/APPCommon;component/Resources/Fonts/#Segoe UI</FontFamily>
    <FontFamily x:Key="Georgia">pack://application:,,,/APPCommon;component/Resources/Fonts/#Georgia</FontFamily>
    <FontFamily x:Key="StylusBT">pack://application:,,,/APPCommon;component/Resources/Fonts/#Stylus BT</FontFamily>
    <FontFamily x:Key="Roboto">pack://application:,,,/APPCommon;component/Resources/Fonts/#Roboto Regular</FontFamily>
    <FontFamily x:Key="Mulish">pack://application:,,,/APPCommon;component/Resources/Fonts/#Mulish-VariableFont_wght</FontFamily>

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />-->
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>